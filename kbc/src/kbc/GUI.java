package kbc;
import Questions.*;
import java.awt.Color;
import static java.awt.Color.green;
import static java.awt.Color.red;
import java.awt.Dimension;
import java.util.*;
import static javafx.scene.paint.Color.color;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author ayushi,manas,gokul
 */
public class GUI extends javax.swing.JFrame {
    String a[]=new String[6];
    String answer, first, second;
    int qa=0;
      int i=0, j=0, amount=0, currentAmt=0, actualAmt=0;
      String op1, op2;
      int L1=0, L2=0, L3=0, L2count;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        question.setEnabled(false);
        question.setVisible(false);
        questionNo.setVisible(false);
        amountWon.setVisible(false);
        a1000.setVisible(false);
        a2000.setVisible(false);
        a4000.setVisible(false);
        a5000.setVisible(false);
        a10000.setVisible(false);
        a20000.setVisible(false);
        a40000.setVisible(false);
        a5000.setVisible(false);
        a10000.setVisible(false);
        a20000.setVisible(false);
        a40000.setVisible(false);
        a80000.setVisible(false);
        a160000.setVisible(false);
        a320000.setVisible(false);
        a640000.setVisible(false);
        a1250000.setVisible(false);
        a2500000.setVisible(false);
        a5000000.setVisible(false);
        a10000000.setVisible(false);
        question.setVisible(false);
        optionA.setVisible(false);
        optionB.setVisible(false);
        optionC.setVisible(false);
        optionD.setVisible(false);
        next.setVisible(false);
        LL1.setVisible(false);
        LL2.setVisible(false);
        LL3.setVisible(false);
        quits.setVisible(false);
        start.setSize(new Dimension(100, 200));
        colour();
        enable();
        a1000.setEnabled(false);
        a2000.setEnabled(false);
        a4000.setEnabled(false);
        a5000.setEnabled(false);
        a10000.setEnabled(false);
        a20000.setEnabled(false);
        a40000.setEnabled(false);
        a80000.setEnabled(false);
        a160000.setEnabled(false);
        a320000.setEnabled(false);
        a640000.setEnabled(false);
        a1250000.setEnabled(false);
        a2500000.setEnabled(false);
        a5000000.setEnabled(false);
        a10000000.setEnabled(false);
        question.setEnabled(false);
        questionNo.setEnabled(false);
        amountWon.setEnabled(false);
        auda.setVisible(false);
        audb.setVisible(false);
        audc.setVisible(false);
        audd.setVisible(false);
        polla.setEnabled(false);
        pollb.setEnabled(false);
        pollc.setEnabled(false);
        polld.setEnabled(false);
        polla.setVisible(false);
        pollb.setVisible(false);
        pollc.setVisible(false);
        polld.setVisible(false);
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        questionNo = new javax.swing.JTextField();
        start = new javax.swing.JButton();
        next = new javax.swing.JButton();
        LL1 = new javax.swing.JButton();
        LL2 = new javax.swing.JButton();
        LL3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        amountWon = new javax.swing.JTextArea();
        quits = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        a1250000 = new javax.swing.JButton();
        a20000 = new javax.swing.JButton();
        a40000 = new javax.swing.JButton();
        a4000 = new javax.swing.JButton();
        a320000 = new javax.swing.JButton();
        a10000 = new javax.swing.JButton();
        a160000 = new javax.swing.JButton();
        a640000 = new javax.swing.JButton();
        a10000000 = new javax.swing.JButton();
        a5000 = new javax.swing.JButton();
        a1000 = new javax.swing.JButton();
        a80000 = new javax.swing.JButton();
        a2500000 = new javax.swing.JButton();
        a5000000 = new javax.swing.JButton();
        a2000 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        optionA = new javax.swing.JButton();
        optionB = new javax.swing.JButton();
        optionC = new javax.swing.JButton();
        optionD = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        audc = new javax.swing.JProgressBar();
        audd = new javax.swing.JProgressBar();
        audb = new javax.swing.JProgressBar();
        auda = new javax.swing.JProgressBar();
        polld = new javax.swing.JTextField();
        polla = new javax.swing.JTextField();
        pollb = new javax.swing.JTextField();
        pollc = new javax.swing.JTextField();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kaun Banega Crorepati");
        setBackground(new java.awt.Color(43, 10, 166));
        setMaximumSize(new java.awt.Dimension(2147483647, 2147443647));

        question.setColumns(20);
        question.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        question.setLineWrap(true);
        question.setRows(5);
        question.setDisabledTextColor(new java.awt.Color(0, 0, 204));
        jScrollPane1.setViewportView(question);

        questionNo.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        questionNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionNoActionPerformed(evt);
            }
        });

        start.setFont(new java.awt.Font("Algerian", 3, 24)); // NOI18N
        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        next.setText("Show Question");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        LL1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        LL1.setText("Fifty-Fifty");
        LL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LL1ActionPerformed(evt);
            }
        });

        LL2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        LL2.setText("Choose 2");
        LL2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LL2ActionPerformed(evt);
            }
        });

        LL3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        LL3.setText("Audience Poll");
        LL3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LL3ActionPerformed(evt);
            }
        });

        amountWon.setColumns(20);
        amountWon.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        amountWon.setLineWrap(true);
        amountWon.setRows(5);
        jScrollPane2.setViewportView(amountWon);

        quits.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        quits.setText("Quit");
        quits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitsActionPerformed(evt);
            }
        });

        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(135, 493));

        a1250000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a1250000.setText("1250000");

        a20000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a20000.setText("20000");

        a40000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a40000.setText("40000");

        a4000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a4000.setText("4000");

        a320000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a320000.setText("320000");

        a10000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a10000.setText("10000");
        a10000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a10000ActionPerformed(evt);
            }
        });

        a160000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a160000.setText("160000");

        a640000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a640000.setText("640000");

        a10000000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a10000000.setText("10000000");

        a5000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a5000.setText("5000");

        a1000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a1000.setText("1000");

        a80000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a80000.setText("80000");

        a2500000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a2500000.setText("2500000");

        a5000000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a5000000.setText("5000000");

        a2000.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a2000.setText("2000");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a640000)
                    .addComponent(a1250000)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(a20000, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(a40000, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(a80000)
                        .addComponent(a10000))
                    .addComponent(a1000)
                    .addComponent(a2000)
                    .addComponent(a4000)
                    .addComponent(a2500000)
                    .addComponent(a5000)
                    .addComponent(a320000)
                    .addComponent(a5000000)
                    .addComponent(a10000000)
                    .addComponent(a160000))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a10000000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a5000000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a2500000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a1250000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a640000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a320000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a160000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a80000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a40000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a20000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a10000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a5000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a4000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a2000)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a1000)
                .addContainerGap())
        );

        optionA.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        optionA.setText("A");
        optionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionAActionPerformed(evt);
            }
        });

        optionB.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        optionB.setText("B");
        optionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionBActionPerformed(evt);
            }
        });

        optionC.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        optionC.setText("C");
        optionC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionCActionPerformed(evt);
            }
        });

        optionD.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        optionD.setText("D");
        optionD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(optionC, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionD, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(optionA, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionB, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(optionA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optionD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(optionC)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Downloads\\1540960703418.png")); // NOI18N

        audc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        audc.setPreferredSize(new java.awt.Dimension(150, 20));
        audc.setRequestFocusEnabled(false);

        audd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        audd.setPreferredSize(new java.awt.Dimension(150, 20));
        audd.setRequestFocusEnabled(false);

        audb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        audb.setPreferredSize(new java.awt.Dimension(150, 20));
        audb.setRequestFocusEnabled(false);

        auda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        auda.setPreferredSize(new java.awt.Dimension(150, 20));
        auda.setRequestFocusEnabled(false);

        polld.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        polld.setText("D");
        polld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polldActionPerformed(evt);
            }
        });

        polla.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        polla.setText("A");
        polla.setPreferredSize(new java.awt.Dimension(20, 20));
        polla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollaActionPerformed(evt);
            }
        });

        pollb.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pollb.setText("B");
        pollb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollbActionPerformed(evt);
            }
        });

        pollc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pollc.setText("C");
        pollc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(polla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pollb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(audb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(auda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pollc)
                            .addComponent(polld))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(audd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(audc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(auda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(polla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pollb)
                    .addComponent(audb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pollc)
                    .addComponent(audc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(polld)
                    .addComponent(audd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 919, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(questionNo, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(next))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LL1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LL2)
                                .addGap(171, 171, 171))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quits, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LL3)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2)))
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LL1)
                            .addComponent(LL2)
                            .addComponent(LL3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(questionNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(next)
                            .addComponent(quits))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionAActionPerformed
        
        amountWon.setVisible(true);
        quits.setEnabled(false);
        LL1.setEnabled(false);
        LL2.setEnabled(false);
        LL3.setEnabled(false);
        if(qa==1)
       {
           if(i<15)
           next.setEnabled(true);
           answer="A";
       if(L2==1){
           optionA.setBackground(Color.blue);
               first="A";
           L2++;
       }
       else if(L2==2)
       {
           second="A";
           if(first.equals(a[5]))
           {
               switch(first)
               {
                   case "B": optionB.setBackground(Color.green); break;
                   case "C": optionC.setBackground(Color.green); break;
                   case "D": optionD.setBackground(Color.green); break;
               }
               optionA.setBackground(Color.red);
               right();
           }
           else if(second.equals(a[5]))
           {
               optionA.setBackground(Color.green);
               switch(first)
               {
                   case "B": optionB.setBackground(Color.red); break;
                   case "C": optionC.setBackground(Color.red); break;
                   case "D": optionD.setBackground(Color.red); break;
               }
               right();
           }
           else
           {
               optionA.setBackground(Color.red);
               correctAnswer();
               wrong();
               switch(first)
               {
                   case "B": optionB.setBackground(Color.red); break;
                   case "C": optionC.setBackground(Color.red); break;
                   case "D": optionD.setBackground(Color.red); break;
               }
           }
           qa=0;
           L2++;
       }
       else{
       if(answer.equals(a[5]))
       {
           optionA.setBackground(Color.green);
           right();
       }
       else
       {
           optionA.setBackground(Color.red);
           correctAnswer();
           wrong();
       }}
       }
       if(L2!=2)
        qa=0;
    }//GEN-LAST:event_optionAActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
      
        start.setVisible(false);
        a1000.setVisible(true);
        a2000.setVisible(true);
        a4000.setVisible(true);
        a5000.setVisible(true);
        a10000.setVisible(true);
        a20000.setVisible(true);
        a40000.setVisible(true);
        a5000.setVisible(true);
        a10000.setVisible(true);
        a20000.setVisible(true);
        a40000.setVisible(true);
        a80000.setVisible(true);
        a160000.setVisible(true);
        a320000.setVisible(true);
        a640000.setVisible(true);
        a1250000.setVisible(true);
        a2500000.setVisible(true);
        a5000000.setVisible(true);
        a10000000.setVisible(true);
        question.setVisible(true);
        optionA.setVisible(true);
        optionB.setVisible(true);
        optionC.setVisible(true);
        optionD.setVisible(true);
        next.setVisible(true);
        LL1.setVisible(true);
        LL2.setVisible(true);
        LL3.setVisible(true);
        quits.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_startActionPerformed

    private void questionNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionNoActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_questionNoActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
         i++;
         next.setText("Next Question");
         qa=1;
         enable();
         colour();
         getQuestion();
         amountWon.setText("");
         amountWon.setVisible(false);
         optionA.setBackground(Color.GRAY);
         optionB.setBackground(Color.GRAY);
         optionC.setBackground(Color.GRAY);
         optionD.setBackground(Color.GRAY);
          optionA.setVisible(true); 
          optionB.setVisible(true); 
          optionC.setVisible(true); 
          optionD.setVisible(true); 
         questionNo.setVisible(true);
         next.setEnabled(false);
         if(L3==1)
         {
             auda.setVisible(false);
        audb.setVisible(false);
        audc.setVisible(false);
        audd.setVisible(false);
        polla.setVisible(false);
        pollb.setVisible(false);
        pollc.setVisible(false);
        polld.setVisible(false);
         }
    }//GEN-LAST:event_nextActionPerformed

    private void optionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionBActionPerformed
               
        amountWon.setVisible(true);
               quits.setEnabled(false);
               LL1.setEnabled(false);
        LL2.setEnabled(false);
        LL3.setEnabled(false);
        if(qa==1)
       {
           if(i<15)
           next.setEnabled(true);
           answer="B";
       if(L2==1){
           optionB.setBackground(Color.blue);
               first="B";
           L2++;
       }
       else if(L2==2)
       {
           second="B";
           if(first.equals(a[5]))
           {
               switch(first)
               {
                   case "A": optionA.setBackground(Color.green); break;
                   case "C": optionC.setBackground(Color.green); break;
                   case "D": optionD.setBackground(Color.green); break;
               }
               optionB.setBackground(Color.red);
               switch(first)
               {
                   case "A": optionA.setBackground(Color.red); break;
                   case "C": optionC.setBackground(Color.red); break;
                   case "D": optionD.setBackground(Color.red); break;
               }
               right();
           }
           else if(second.equals(a[5]))
           {
               optionB.setBackground(Color.green);
               right();
           }
           else
           {
               optionB.setBackground(Color.red);
               correctAnswer();
               wrong();
               switch(first)
               {
                   case "A": optionA.setBackground(Color.red); break;
                   case "C": optionC.setBackground(Color.red); break;
                   case "D": optionD.setBackground(Color.red); break;
               }
           }
           qa=0;
           L2++;
       }
       else{
       if(answer.equals(a[5]))
       {
           optionB.setBackground(Color.green);
           right();
       }
       else
       {
           optionB.setBackground(Color.red);
           correctAnswer();
           wrong();
       }}
       }
       if(L2!=2)
        qa=0;
    }//GEN-LAST:event_optionBActionPerformed

    private void optionCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionCActionPerformed
            
        amountWon.setVisible(true);
                quits.setEnabled(false);
                LL1.setEnabled(false);
        LL2.setEnabled(false);
        LL3.setEnabled(false);
        if(qa==1)
       {
           if(i<15)
           next.setEnabled(true);
           answer="C";
       if(L2==1){
           optionC.setBackground(Color.blue);
               first="C";
           L2++;
       }
       else if(L2==2)
       {
           second="C";
           if(first.equals(a[5]))
           {
               switch(first)
               {
                   case "B": optionB.setBackground(Color.green); break; 
                   case "A": optionA.setBackground(Color.green); break;
                   case "D": optionD.setBackground(Color.green); break;
               }
               optionC.setBackground(Color.red);
               right();
           }
           else if(second.equals(a[5]))
           {
               optionC.setBackground(Color.green);
               switch(first)
               {
                   case "B": optionB.setBackground(Color.red); break;
                   case "A": optionA.setBackground(Color.red); break;
                   case "D": optionD.setBackground(Color.red); break;
               }
               right();
           }
           else
           {
               optionC.setBackground(Color.red);
               correctAnswer();
               wrong();
               switch(first)
               {
                   case "B": optionB.setBackground(Color.red); break;
                   case "A": optionA.setBackground(Color.red); break;
                   case "D": optionD.setBackground(Color.red); break;
               }
           }
           qa=0;
           L2++;
       }
       else{
       if(answer.equals(a[5]))
       {
           optionC.setBackground(Color.green);
           right();
       }
       else
       {
           optionC.setBackground(Color.red);
           correctAnswer();
           wrong();
       }}
       }
       if(L2!=2)
        qa=0;
    }//GEN-LAST:event_optionCActionPerformed

    private void optionDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionDActionPerformed
              
        amountWon.setVisible(true);
               quits.setEnabled(false);
               LL1.setEnabled(false);
        LL2.setEnabled(false);
        LL3.setEnabled(false);
        if(qa==1)
       {
           if(i<15)
           next.setEnabled(true);
           answer="D";
       if(L2==1){
           optionD.setBackground(Color.blue);
               first="D";
           L2++;
       }
       else if(L2==2)
       {
           second="D";
           if(first.equals(a[5]))
           {
               switch(first)
               {
                   case "B": optionB.setBackground(Color.green); break;
                   case "C": optionC.setBackground(Color.green); break;
                   case "A": optionA.setBackground(Color.green); break;
               }
               optionD.setBackground(Color.blue);
               right();
           }
           else if(second.equals(a[5]))
           {
               optionD.setBackground(Color.green);
               switch(first)
               {
                   case "B": optionB.setBackground(Color.red); break;
                   case "C": optionC.setBackground(Color.red); break;
                   case "A": optionA.setBackground(Color.red); break;
               }
               right();
           }
           else
           {
               optionD.setBackground(Color.red);
               correctAnswer();
               wrong();
               switch(first)
               {
                   case "B": optionB.setBackground(Color.red); break;
                   case "C": optionC.setBackground(Color.red); break;
                   case "A": optionA.setBackground(Color.red); break;
               }
           }
           qa=0;
           L2++;
       }
       else{
       if(answer.equals(a[5]))
       {
           optionD.setBackground(Color.green);
           right();
       }
       else
       {
           optionD.setBackground(Color.red);
           correctAnswer();
           wrong();
       }}
       }
       if(L2!=2)
        qa=0;
    }//GEN-LAST:event_optionDActionPerformed

    private void LL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LL1ActionPerformed
       if(L1==0)
       {
           L1=1;
           LL1.setBackground(Color.red);
           LL2.setEnabled(false);
           op1=a[5]; op2=a[5];
           while(op1.equals(a[5]) || op2.equals(a[5]) || op1.equals(op2))
           {
               switch(65+(int)(Math.random()*((4))))          //(int)(Math.random()*3)+65)
               {
                   case 65: op1="A"; break;
                   case 66: op1="B"; break;
                   case 67: op1="C"; break;
                   case 68: op1="D"; break;
               }
               switch(65+(int)(Math.random()*((4))))
               {
                   case 65: op2="A"; break;
                   case 66: op2="B"; break;
                   case 67: op2="C"; break;
                   case 68: op2="D"; break;
               }
           }
           switch(op1)
           {
               case "A": optionA.setVisible(false); break;
               case "B": optionB.setVisible(false); break;
               case "C": optionC.setVisible(false); break;
               case "D": optionD.setVisible(false); break;
           }
           switch(op2)
           {
               case "A": optionA.setVisible(false); break;
               case "B": optionB.setVisible(false); break;
               case "C": optionC.setVisible(false); break;
               case "D": optionD.setVisible(false); break;
           }
       }
    }//GEN-LAST:event_LL1ActionPerformed

    private void LL2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LL2ActionPerformed
       if(L2==0)
       {
           L2=1;
           LL1.setEnabled(false);
           LL2.setBackground(Color.red);
       }
    }//GEN-LAST:event_LL2ActionPerformed

    private void LL3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LL3ActionPerformed
        L3=1;
        LL3.setBackground(Color.red);
        auda.setVisible(true);
        audb.setVisible(true);
        audc.setVisible(true);
        audd.setVisible(true);
        polla.setVisible(true);
        pollb.setVisible(true);
        pollc.setVisible(true);
        polld.setVisible(true);
        int a1=(int)(Math.random()*20)+50;
        int b=(int)(Math.random()*5)+15;
        int c=(int)(Math.random()*8)+2;
        int d=100-a1-b-c;
        switch(a[5])
        {
            case "A": auda.setValue(a1);
                      audb.setValue(b);
                      audc.setValue(c);
                      audd.setValue(d);
                      break;
            case "B": audb.setValue(a1);
                      auda.setValue(b);
                      audc.setValue(c);
                      audd.setValue(d);
                      break;
            case "C": audc.setValue(a1);
                      audb.setValue(b);
                      auda.setValue(c);
                      audd.setValue(d);
                      break;
            case "D": audd.setValue(a1);
                      auda.setValue(b);
                      audc.setValue(c);
                      auda.setValue(d);
                      break;          
        }
        auda.setStringPainted(true);
        audb.setStringPainted(true);
        audc.setStringPainted(true);
        audd.setStringPainted(true);
    }//GEN-LAST:event_LL3ActionPerformed

    private void quitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitsActionPerformed
        next.setEnabled(false);
        qa=0;
        amountWon.setVisible(true);
        amountWon.setText("You have chosen to quit the game. \n You have won Rs. "+amount);  
        LL1.setEnabled(false);
        LL2.setEnabled(false);
        LL3.setEnabled(false);
        quits.setEnabled(false);
        optionA.setEnabled(false);
        optionB.setEnabled(false);
        optionC.setEnabled(false);
        optionD.setEnabled(false);
        //amountWon.setText("duhfiuw");      
// TODO add your handling code here:
    }//GEN-LAST:event_quitsActionPerformed

    private void pollcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pollcActionPerformed

    private void pollaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pollaActionPerformed

    private void polldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_polldActionPerformed

    private void pollbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pollbActionPerformed

    private void a10000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a10000ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a10000ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void correctAnswer()
    {
        switch(a[5])
        {
            case "A": optionA.setBackground(Color.green);  break;
            case "B": optionB.setBackground(Color.green);  break;
            case "C": optionC.setBackground(Color.green);  break;
            case "D": optionD.setBackground(Color.green);  break;
        }
    }
    public void enable()
    {
         questionNo.setText("Question No.: "+ i); 
         LL1.setEnabled(false);
         LL2.setEnabled(false);
         LL3.setEnabled(false);
         optionA.setEnabled(false);
         optionB.setEnabled(false);
         optionC.setEnabled(false);
         optionD.setEnabled(false);
         quits.setEnabled(false);
         if(i<15)
             next.setEnabled(true);
         else
             next.setEnabled(false);
         if(qa==1)
         {
         optionA.setEnabled(true);
         optionB.setEnabled(true);
         optionC.setEnabled(true);
         optionD.setEnabled(true);
         quits.setEnabled(true);
             
         if(L1==0)
         {
             LL1.setEnabled(true);
         }
         if(L2==0)
         {
             LL2.setEnabled(true);
         }
         if(L3==0)
         {
             LL3.setEnabled(true);
         }
         }
         
    }
    public void right()
    {
        amount=currentAmt;
        if(amount<10000)
            actualAmt=0;
        else if(amount<320000)
            actualAmt=10000;
        else if(amount<10000000)
            actualAmt=320000;
        else
            actualAmt=10000000;
        amountWon.setText("Congratulations. You have answered correctly. \n You have won Rs. "+amount);   
    }
    public void wrong()
    {
       next.setEnabled(false);
       amountWon.setText("Sorry. Your answer was wrong. \n You have won Rs. "+actualAmt);
    }
    public void colour()
    {
        switch(i)
        {
            case 15: a10000000.setEnabled(true);
                a10000000.setBackground(Color.orange);  
                a5000000.setBackground(Color.green);
                currentAmt=10000000;  break;
            case 14: a5000000.setEnabled(true);
                a5000000.setBackground(Color.orange); 
                a2500000.setBackground(Color.green);
                currentAmt=5000000;  break;
            case 13: a2500000.setEnabled(true);
                a2500000.setBackground(Color.orange);
                a1250000.setBackground(Color.green);
                currentAmt=2500000;  break;
            case 12: a1250000.setEnabled(true);
                a1250000.setBackground(Color.orange);
                a640000.setBackground(Color.green);
                currentAmt=1250000;  break;
            case 11: a640000.setEnabled(true); 
                a640000.setBackground(Color.orange); 
                a320000.setBackground(Color.magenta);
                currentAmt=640000;  break;
            case 10: a320000.setEnabled(true);
                a320000.setBackground(Color.orange); 
                a160000.setBackground(Color.green);
                currentAmt=320000;  break;
            case 9: a160000.setEnabled(true);
                a160000.setBackground(Color.orange); 
                a80000.setBackground(Color.green);
                currentAmt=160000;  break;
            case 8: a80000.setEnabled(true); 
                a80000.setBackground(Color.orange); 
                a40000.setBackground(Color.green);
                currentAmt=80000;   break;
            case 7: a40000.setEnabled(true);
                a40000.setBackground(Color.orange);
                a20000.setBackground(Color.green);
                currentAmt=40000;  break;
            case 6: a20000.setEnabled(true);
                a20000.setBackground(Color.orange);
                a10000.setBackground(Color.MAGENTA);
                currentAmt=20000;  break;
            case 5: a10000.setEnabled(true);
                a10000.setBackground(Color.orange);
                a5000.setBackground(Color.green);
                currentAmt=10000;  break;
            case 4: a5000.setEnabled(true);
                a5000.setBackground(Color.orange);
                a4000.setBackground(Color.green);
                currentAmt=5000;  break;
            case 3: a4000.setEnabled(true);
                a4000.setBackground(Color.orange);
                a2000.setBackground(Color.green);
                currentAmt=4000;  break;
            case 2: a2000.setEnabled(true);
                a2000.setBackground(Color.orange); 
                a1000.setBackground(Color.green);
                currentAmt=2000; break;
            case 1: a1000.setEnabled(true);
                a1000.setBackground(Color.orange);  
                currentAmt=1000;  break;    
        }
    }
    public void Print_Question(String str[])
    {
        question.setText(str[0]);
        optionA.setText(str[1]);
        optionB.setText(str[2]);
        optionC.setText(str[3]);
        optionD.setText(str[4]);
    }
    public void getQuestion()
    {
        int ran=(int)(Math.random()*10)+1;
			switch(i)
			{
				case 1:
				{
					OneThousand obj=new OneThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 2:
				{
					TwoThousand obj=new TwoThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 3:
				{
					FourThousand obj=new FourThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 4:
				{
					FiveThousand obj=new FiveThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 5:
				{
					TenThousand obj=new TenThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 6:
				{
					TwentyThousand obj=new TwentyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 7:
				{
					FortyThousand obj=new FortyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 8:
				{
					EightyThousand obj=new EightyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 9:
				{
					OneLakhSixtyThousand obj=new OneLakhSixtyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 10:
				{
					ThreeLakhTwentyThousand obj=new ThreeLakhTwentyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 11:
				{
					SixLakhFortyThousand obj=new SixLakhFortyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 12:
				{
					TwelveLakhFiftyThousand obj=new TwelveLakhFiftyThousand();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 13:
				{
					TwentyFiveLakh obj=new TwentyFiveLakh();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 14:
				{
					FiftyLakh obj=new FiftyLakh();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
				case 15:
				{
					OneCrore obj=new OneCrore();
					a=obj.ques(ran);
                                        Print_Question(a);
                                        //c=scanAndCompareAnswer(a);
					break;
				}
			}
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
                }
        });
        
    }

    private String ques(int i) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LL1;
    private javax.swing.JButton LL2;
    private javax.swing.JButton LL3;
    private javax.swing.JButton a1000;
    private javax.swing.JButton a10000;
    private javax.swing.JButton a10000000;
    private javax.swing.JButton a1250000;
    private javax.swing.JButton a160000;
    private javax.swing.JButton a2000;
    private javax.swing.JButton a20000;
    private javax.swing.JButton a2500000;
    private javax.swing.JButton a320000;
    private javax.swing.JButton a4000;
    private javax.swing.JButton a40000;
    private javax.swing.JButton a5000;
    private javax.swing.JButton a5000000;
    private javax.swing.JButton a640000;
    private javax.swing.JButton a80000;
    private javax.swing.JTextArea amountWon;
    private javax.swing.JProgressBar auda;
    private javax.swing.JProgressBar audb;
    private javax.swing.JProgressBar audc;
    private javax.swing.JProgressBar audd;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton next;
    private javax.swing.JButton optionA;
    private javax.swing.JButton optionB;
    private javax.swing.JButton optionC;
    private javax.swing.JButton optionD;
    private javax.swing.JTextField polla;
    private javax.swing.JTextField pollb;
    private javax.swing.JTextField pollc;
    private javax.swing.JTextField polld;
    private javax.swing.JTextArea question;
    private javax.swing.JTextField questionNo;
    private javax.swing.JButton quits;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables
}
